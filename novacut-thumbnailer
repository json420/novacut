#!/usr/bin/python3

# novacut: the distributed video editor
# Copyright (C) 2011-2015 Novacut Inc
#
# This file is part of `novacut`.
#
# `novacut` is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.
#
# `novacut` is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for
# more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with `novacut`.  If not, see <http://www.gnu.org/licenses/>.
#
# Authors:
#   Jason Gerard DeRose <jderose@novacut.com>

"""
Script to thumbnail by Dmedia File ID using `novacut.thumbnail.Thumbnailer`.
"""

import sys
import json
import argparse
import logging

from gi.repository import GLib
import dbus
from microfiber import Database, NotFound

from novacut.thumbnail import Thumbnailer

logging.basicConfig(
    level=logging.DEBUG,
    format='\t'.join([
        '%(levelname)s',
        '%(threadName)s',
        '%(message)s',
    ]),
)
log = logging.getLogger(__name__)

parser = argparse.ArgumentParser()
parser.add_argument('file_id')
parser.add_argument('frame', type=int, nargs='+')
args = parser.parse_args()


# Blah blah:
Dmedia = dbus.SessionBus().get_object('org.freedesktop.Dmedia', '/')
(_id, status, filename) = Dmedia.Resolve(args.file_id)
if status != 0:
    log.error('not local: %s', _id)
    sys.exit(0)
log.info('Thumbnailing %r', filename)

# Thumbnail DB:
env = json.loads(sys.stdin.read())
db = Database('thumbnails-1', env)
db.ensure()

# Thumbnail doc for this file_id:
try:
    doc = db.get(_id)
except NotFound:
    doc = {
        '_id': _id,
        '_attachments': {},
    }

# MainLoop:
mainloop = GLib.MainLoop()

def callback(thumbnailer, success):
    log.info('success=%r', success)
    mainloop.quit()

thumbnailer = Thumbnailer(callback, filename, args.frame, doc['_attachments'])
thumbnailer.run()
mainloop.run()
if thumbnailer.success is not True:
    log.error('Fatal error in Thumbnailer')
    sys.exit(1)

if thumbnailer.changed:
    log.info('saving thumbnail changes for %s', args.file_id)
    db.save(doc)
else:
    log.warning('no thumbnail changes for %s', args.file_id)

