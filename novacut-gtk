#!/usr/bin/python3

# novacut: the collaborative video editor
# Copyright (C) 2011 Novacut Inc
#
# This file is part of `novacut`.
#
# `novacut` is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.
#
# `novacut` is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for
# more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with `novacut`.  If not, see <http://www.gnu.org/licenses/>.
#
# Authors:
#   Jason Gerard DeRose <jderose@novacut.com>

import optparse
import json
from os import path

import novacut

from gi.repository import GObject, Gtk, Gdk


BUS = 'org.freedesktop.DC3'


class UI(object):
    def __init__(self, benchmark=False, intree=False):
        self.benchmark = benchmark
        self.intree = intree
        self.window = Gtk.Window()
        self.window.connect('destroy', Gtk.main_quit)
        self.window.override_background_color(0, Gdk.RGBA(1.0, 1.0, 1.0, 1.0))
        self.window.set_default_size(960, 540)
        #self.window.maximize()

        self.window.show_all()
        GObject.idle_add(self.on_idle)

    def run(self):
        Gtk.main()

    def on_idle(self):
        if self.benchmark:
            Gtk.main_quit()
            return

        import novacut.dbus
        novacut.dbus.session.get_async(self.on_proxy, BUS, '/')

    def on_proxy(self, proxy, async_result, *args):
        import microfiber
        import novacut.widgets

        self.dc3 = proxy
        env = json.loads(self.dc3.GetEnv())
        if self.intree:
            ui = path.join(path.dirname(path.abspath(__file__)), 'ui')
            self.dc3.SetInTree('(s)', ui)
        self.db = microfiber.Database('novacut', env)
        self.db.ensure()

        self.scroll = Gtk.ScrolledWindow()
        self.scroll.set_policy(
            Gtk.PolicyType.AUTOMATIC, Gtk.PolicyType.AUTOMATIC
        )
        self.window.add(self.scroll)
        self.view = novacut.widgets.CouchView()
        self.scroll.add(self.view)

        self.view._set_env(env)
        base = ('/_intree/' if self.intree else '/_apps/novacut/')
        uri = self.db._full_url(base + 'index.html')
        self.view.load_uri(uri)

        self.scroll.show_all()


parser = optparse.OptionParser(
    version=novacut.__version__,
)
parser.add_option('--benchmark',
    help='benchmark app startup time',
    action='store_true',
    default=False,
)
(options, args) = parser.parse_args()
intree = path.isfile(path.join(path.dirname(__file__), 'setup.py'))
ui = UI(options.benchmark, intree)
ui.run()
